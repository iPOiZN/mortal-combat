/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// import * as flsFunctions from './modules/functions.js';\n\n// flsFunctions.isWebp();\n\nfunction Robot(hp, power) {\n  this.hp = hp;\n  this.power = power;\n  this.attack = function () {\n    return Math.floor(Math.random() * this.power + 1);\n  };\n  this.damage = function (dmg) {\n    return (this.hp -= dmg);\n  };\n}\n\nfunction getRandom(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nconst robot1 = new Robot(getRandom(80, 100), getRandom(10, 15));\nconst robot2 = new Robot(getRandom(80, 100), getRandom(10, 15));\nconst hp = document.querySelectorAll(\".hp\");\nconst cons = document.querySelector(\".console\");\nconst time = document.querySelector(\".time\");\nconst winner = document.querySelector(\".end\");\nconst start = document.querySelector(\".fight\");\nconst avatar = document.querySelector(\".avatar\");\nconst avatar2 = document.querySelector(\".avatar2\");\nconst restart = document.querySelector(\".restart\");\nlet timer;\nlet timer2;\nlet count = 3;\n\nconsole.log(robot1, robot2);\n\nfunction timeCount() {\n  time.innerText = count;\n  start.innerHTML = '<img style=\"width:64px;height:64px\" src=\"img/icon.png\">';\n  sound(`../files/other/${count}.mp3`);\n  if (count == 0) {\n    time.classList.add(\"ftime\");\n    time.innerText = \"FIGHT!\";\n    start.innerHTML = \"FIGHT!\";\n    sound(\"../files/other/fight2.mp3\");\n  } else if (count < 0) {\n    clearInterval(timer2);\n    time.innerText = \"\";\n    cons.classList.add(\"console-open\");\n    avatar.src = \"img/scorp-act4.gif\";\n    avatar2.src = \"img/sub-act.gif\";\n  }\n  count--;\n}\n\nstart.addEventListener(\n  \"click\",\n  function () {\n    document.documentElement.requestFullscreen\n      ? document.documentElement.requestFullscreen()\n      : \"\";\n    timer2 = setInterval(timeCount, 1000);\n    setTimeout(function () {\n      timer = setInterval(fightRobot1, getRandom(500, 2000));\n    }, 6000);\n    start.style.animation = \"none\";\n  },\n  { once: true }\n);\n\nlet text = [\n  \"ударил c вертушки\",\n  \"ударил с разворота\",\n  \"опрокинул\",\n  \"ударил из под тишка\",\n  \"пнул в печень\",\n  \"применил суперудар против\",\n  \"снес челюсть\",\n];\n\nhp[0].innerText = robot1.hp;\nhp[1].innerText = robot2.hp;\nfunction fightRobot1() {\n  hp[1].innerText = robot2.damage(robot1.attack());\n  cons.value += `> Scorpion ${text[getRandom(0, 7)]} Sub-Zero \\n`;\n  clearInterval(timer);\n  timer2 = setInterval(fightRobot2, getRandom(500, 2000));\n  if (robot2.hp <= 0) {\n    clearInterval(timer);\n    clearInterval(timer2);\n    hp[1].innerText = 0;\n    cons.value += \"\\n Scorpion победитель!\";\n    robot2.hp = 0;\n    avatar.src = \"img/scorp-win.gif\";\n    avatar2.src = \"img/sub-dead.gif\";\n    winner.innerText = \"SCORPION WINS\";\n    sound(\"../files/other/scorp.mp3\");\n    restart.style.display = \"flex\";\n  }\n  hp[1].style.backgroundSize = `${robot2.hp}% 100%`;\n}\nfunction fightRobot2() {\n  hp[0].innerText = robot1.damage(robot2.attack());\n  cons.value += `> Sub-Zero ${text[getRandom(0, 7)]} Scorpion \\n`;\n  clearInterval(timer2);\n  timer = setInterval(fightRobot1, getRandom(500, 2000));\n  if (robot1.hp <= 0) {\n    clearInterval(timer);\n    clearInterval(timer2);\n    hp[0].innerText = 0;\n    robot1.hp = 0;\n    cons.value += \"\\n Sub-Zero победил!\";\n    avatar2.src = \"img/subzero-win.gif\";\n    avatar.src = \"img/scorp-dead.gif\";\n    avatar2.style = \"transform:scale(1.15)\";\n    winner.innerText = \"SUB-ZERO WINS\";\n    sound(\"../files/other/subzero.mp3\");\n    restart.style.display = \"flex\";\n  }\n  hp[0].style.backgroundSize = `${robot1.hp}% 100%`;\n}\n\nfunction sound(source) {\n  let audio = new Audio();\n  audio.src = source;\n  audio.autoplay = true;\n}\n\n// Кнопки\n\nconst hit = document.querySelector(\".hit\");\nconst jump = document.querySelector(\".jump\");\nconst mask = document.querySelector(\".mask\");\nlet timers;\nhit.addEventListener(\"click\", function () {\n  avatar.src = \"img/scorp-act3.gif\";\n  timers = setTimeout(scorpi, 450);\n});\njump.addEventListener(\"click\", function () {\n  avatar.src = \"img/scorp-mask.gif\";\n});\nmask.addEventListener(\"click\", function () {\n  avatar.src = \"img/scorp-super2.gif\";\n  timers = setTimeout(scorpi, 1640);\n  sound(\"../files/other/scor-getover.mp3\");\n});\nfunction scorpi() {\n  clearTimeout(timers);\n  avatar.src = \"img/scorp.gif\";\n  avatar.style.bottom = \"0px\";\n}\n\nlet move = 100;\nlet down = false;\n\ndocument.addEventListener(\n  \"keydown\",\n  function (e) {\n    if (down) return;\n    down = true;\n    switch (e.keyCode) {\n      case 37:\n        avatar.src = \"img/scorp-walk.gif\";\n        timers = setTimeout(scorpi, 300);\n        move -= 100;\n        avatar.style.left = `${move}px`;\n        break;\n      case 38:\n        avatar.src = \"img/scorp-jump3.gif\";\n        timers = setTimeout(scorpi, 300);\n        avatar.style.bottom = \"200px\";\n        avatar.style.zIndex = \"1\";\n        break;\n      case 39:\n        avatar.src = \"img/scorp-walk.gif\";\n        timers = setTimeout(scorpi, 300);\n        move += 100;\n        avatar.style.left = `${move}px`;\n        console.log(move);\n        break;\n      case 40:\n        avatar.src = \"img/scorp-jump.gif\";\n        timers = setTimeout(scorpi, 600);\n        avatar.style.zIndex = \"-1\";\n        break;\n    }\n  },\n  false\n);\ndocument.addEventListener(\n  \"keyup\",\n  function () {\n    down = false;\n  },\n  false\n);\n\nconst changeBg = document.querySelector(\".change-bg\");\nchangeBg.addEventListener(\"click\", function () {\n  document.querySelector(\"body\").classList.toggle(\"arena2\");\n});\n// preloader\n\nwindow.onload = function () {\n  document.body.classList.add(\"loaded_hiding\");\n  window.setTimeout(function () {\n    document.body.classList.add(\"loaded\");\n    document.body.classList.remove(\"loaded_hiding\");\n  }, 500);\n};\n\nlet isSafari = Object.prototype.toString.call(window.HTMLElement).indexOf(\"Constructor\") > 0;\n\n\n//# sourceURL=webpack://fls-gulp-2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;